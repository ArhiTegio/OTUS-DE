[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Виктор\AppData\Local\Temp\idea11.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Виктор\AppData\Local\Temp\idea11.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Amazon.com Inc. Java 1.8.0_282)
[debug]       Load.loadUnit: plugins took 103.5393ms
[debug]       Load.loadUnit: defsScala took 0.2863ms
[debug] [Loading] Scanning directory C:\Users\Виктор\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Виктор\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 16.1755 ms
[debug]           Load.resolveProject(global-plugins) took 40.0137ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Виктор\.sbt\1.0\plugins, plugins: List(<none>))) took 77.6293ms
[debug] [Loading] Done in C:\Users\Виктор\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 94.1293ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2139ms
[debug]     Load.loadUnit(file:/C:/Users/Виктор/.sbt/1.0/plugins/, ...) took 205.3609ms
[debug]   Load.apply: load took 365.2241ms
[debug]   Load.apply: resolveProjects took 5.0435ms
[debug]   Load.apply: finalTransforms took 66.5595ms
[debug]   Load.apply: config.delegates took 6.5893ms
[debug]   Load.apply: Def.make(settings)... took 577.9403ms
[debug]   Load.apply: structureIndex took 82.7312ms
[debug]   Load.apply: mkStreams took 1.4125ms
[info] loading global plugins from C:\Users\Виктор\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2456.9596ms
[debug]           Load.loadUnit: plugins took 18.4187ms
[debug]           Load.loadUnit: defsScala took 0.0026ms
[debug] [Loading] Scanning directory C:\Git\Scala\Задание 3\2.Java\project
[debug]             Load.loadUnit: mkEval took 6.3166ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Git\Scala\Задание 3\2.Java\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.7223 ms
[info] loading settings for project root-2-java-build from assembly.sbt,idea11.sbt ...
[debug]               Load.resolveProject(root-2-java-build) took 3.094ms
[debug]             Load.loadTransitive: finalizeProject(Project(id root-2-java-build, base: C:\Git\Scala\Задание 3\2.Java\project, plugins: List(<none>))) took 5.3137ms
[debug] [Loading] Done in C:\Git\Scala\Задание 3\2.Java\project, returning: (root-2-java-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 136.8013ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.3786ms
[debug]         Load.loadUnit(file:/C:/Git/Scala/Задание%203/2.Java/project/, ...) took 159.3284ms
[debug]       Load.apply: load took 160.4414ms
[debug]       Load.apply: resolveProjects took 0.0709ms
[debug]       Load.apply: finalTransforms took 15.6458ms
[debug]       Load.apply: config.delegates took 0.3132ms
[debug]       Load.apply: Def.make(settings)... took 89.8688ms
[debug]       Load.apply: structureIndex took 28.3786ms
[debug]       Load.apply: mkStreams took 0.0028ms
[info] loading project definition from C:\Git\Scala\Задание 3\2.Java\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 598.7538ms
[debug]     Load.loadUnit: defsScala took 0.003ms
[debug] [Loading] Scanning directory C:\Git\Scala\Задание 3\2.Java
[debug]       Load.loadUnit: mkEval took 0.2483ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Git\Scala\Задание 3\2.Java, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.5898 ms
[info] loading settings for project root-2-java from build.sbt ...
[debug]         Load.resolveProject(root-2-java) took 39.9059ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root-2-java, base: C:\Git\Scala\Задание 3\2.Java, plugins: List(<none>))) took 42.2822ms
[debug] [Loading] Done in C:\Git\Scala\Задание 3\2.Java, returning: (root-2-java)
[debug]     Load.loadUnit: loadedProjectsRaw took 84.6528ms
[debug]     Load.loadUnit: cleanEvalClasses took 2.5915ms
[debug]   Load.loadUnit(file:/C:/Git/Scala/Задание%203/2.Java/, ...) took 686.5159ms
[debug] Load.apply: load took 687.8317ms
[debug] Load.apply: resolveProjects took 0.1061ms
[debug] Load.apply: finalTransforms took 25.3236ms
[debug] Load.apply: config.delegates took 0.3853ms
[debug] Load.apply: Def.make(settings)... took 66.3919ms
[debug] Load.apply: structureIndex took 24.0621ms
[debug] Load.apply: mkStreams took 0.0026ms
[info] set current project to json_reader_VVKuznetsov (in build file:/C:/Git/Scala/Задание%203/2.Java/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 51136 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 51136, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to json_reader_VVKuznetsov (in build file:/C:/Git/Scala/Задание%203/2.Java/)
[debug] > Exec(idea-shell, None, None)
